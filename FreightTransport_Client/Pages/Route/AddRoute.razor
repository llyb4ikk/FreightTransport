@page "/route/addroute"
@inject IRouteService routeService
@inject ICityService cityService
@inject NavigationManager navigationManager
@using FreightTransport_Client.Data.Models
@using FreightTransport_Client.Data.Enums
@using FreightTransport_Client.Data.Interfaces

<div class="col-sm-auto">
    <NavLink href="/cardriver">&#8678Back to list of routes</NavLink><br />

    <div class="row justify-content-center">
        <div class="col-4 ">
            <div class="row justify-content-center"><h3 class="col-auto">Add route</h3></div>

            <EditForm Model="@InputRouteModel" OnValidSubmit="@HandleValidSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="form-group">
                    <label>Start region:</label>
                    <InputSelect class="form-control" @bind-Value="startRegion">
                        @foreach (var item in Enum.GetNames<Region>())
                        {
                            <option value="@item">@item</option>
                        }
                    </InputSelect>
                </div>
                <div class="form-group">
                    <label>Start city:</label>
                    <InputSelect class="form-control" @bind-Value="InputRouteModel.StartCityId">
                        @if (sc != null)
                        {
                            foreach (var item in sc)
                            {
                                <option value="@item.Id">@item.Name</option>
                            }
                        }
                    </InputSelect>
                </div><br/>
                <div class="form-group">
                    <label>Destination region:</label>
                    <InputSelect class="form-control" @bind-Value="destinationRegion">
                        @foreach (var item in Enum.GetNames<Region>())
                        {
                            <option value="@item">@item</option>
                        }
                    </InputSelect>
                </div>
                <div class="form-group">
                    <label>Destination city:</label>
                    <InputSelect class="form-control" @bind-Value="InputRouteModel.DestinationCityId">
                        @if (dc != null)
                        {
                            foreach (var item in dc)
                            {
                                <option value="@item.Id">@item.Name</option>
                            }
                        }
                    </InputSelect>
                </div>
                <div class="row justify-content-center">
                    <div class="col-auto">
                        <button type="submit" class="btn btn-primary btn-lg btn-block">Add route</button>
                    </div>
                </div>

            </EditForm>
        </div>
    </div>
</div>


@code {
    private RouteModel InputRouteModel = new RouteModel();

    private IEnumerable<CityModel> _startCityModels { get; set; }
    private IEnumerable<CityModel> _destinationCityModels { get; set; }

    private IEnumerable<CityModel> sc
    {
        get => _startCityModels;
        set
        {
            _startCityModels = value;
            StateHasChanged();
        }
    }
    private IEnumerable<CityModel> dc
    {
        get => _destinationCityModels;
        set
        {
            _destinationCityModels = value;
            StateHasChanged();
        }
    }

    private Region _SR;
    private Region _dr;
    private Region startRegion
    {
        get => _SR;
        set
        {
            _SR = value;
            SetStartCities(_SR);
            StateHasChanged();
        }
    }
    private Region destinationRegion
    {
        get => _dr;
        set
        {
            _dr = value;
            SetDestinationCities(_dr);
            StateHasChanged();
        }
    }

    private async void SetStartCities(Region region)
    {
        sc = await cityService.GetCitiesbyRegion(region);
        if (sc != null) InputRouteModel.StartCityId = sc.Select(c => c.Id).FirstOrDefault();

    }
    private async void SetDestinationCities(Region region)
    {
        dc = await cityService.GetCitiesbyRegion(region);
        if(dc != null) InputRouteModel.DestinationCityId = dc.Select(c => c.Id).FirstOrDefault();
    }

    private async Task HandleValidSubmit()
    {
        var result = await routeService.AddRoute(InputRouteModel);
        if (result)
        {
            navigationManager.NavigateTo("/route");
        }

    }
}